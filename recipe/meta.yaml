{% set name = "fenics-dolfinx" %}
{% set version = "0.9.0" %}
{% set extra = "" %}

# pins are usually updated on minor bumps:
# basix is currently co-versioned with ffcx
{% set major_minor = version.rsplit(".", 1)[0] %}
{% set ufl_version = "2024.2" %}

{% set build = 4 %}

{%- if scalar is not defined %}
{%- set scalar = "" %}
{%- endif %}

{% if scalar == "real" %}
{%   set build = build + 100 %}
{% endif %}

package:
  name: {{ name|lower }}-split
  version: {{ version }}

source:
  url: https://github.com/fenics/dolfinx/archive/refs/tags/v{{ version }}{{ extra }}.tar.gz
  sha256: b266c74360c2590c5745d74768c04568c965b44739becca4cd6b5aa58cdbbbd1
  patches:
    # cffi is pinned down for a bug
    # but 1.17 is needed for Windows, CPython 3.13
    - unpin-cffi.patch  # [win or py>=313]
    - debug.patch

build:
  number: {{ build }}
  skip: true  # [py<39 or not win]
  force_use_keys:
    # separate builds for each Python
    # this duplicates libdolfinx outputs, but results in faster builds
    - python

outputs:
  - name: fenics-libdolfinx
    script: build-libdolfinx.sh  # [not win]
    script: build-libdolfinx.bat  # [win]
    build:
      skip_compile_pyc:
        - '*'  # [build_platform != target_platform]
      run_exports:
        - {{ pin_subpackage("fenics-libdolfinx", max_pin="x.x.x") }}
        - petsc * {{ scalar }}_*  # [not win]
        - {{ mpi }}
      force_use_keys:
        - python
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ stdlib("c") }}
        - {{ compiler("cxx") }}
        - cmake
        - make  # [not win]
        - ninja  # [win]
        - pkg-config  # [not win]
        - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]
      host:
        - {{ mpi | replace("impi", "impi-devel") }}
        - libadios2  # [not win]
        - libadios2 * mpi_{{ mpi }}_*  # [not win]
        - kahip  # [not win]
        - libboost-devel
        - hdf5 {{ hdf5 }} mpi_{{ mpi }}_*
        - parmetis  # [not win]
        - libscotch
        - libptscotch
        - petsc  # [not win]
        - petsc * {{ scalar }}_*  # [not win]
        - pugixml
        - slepc  # [not win]
        - spdlog
        - fenics-libbasix {{ major_minor }}.*
        - fenics-ufcx {{ major_minor }}.*
      run:
        # these don't have run_exports
        # but are needed at runtime for code generation
        - fenics-ufcx  {{ major_minor }}.*
        - parmetis  # [not win]
        # needs boost metadata just to CMake-load fenix-libdolfinx
        - libboost-devel
    test:
      script: test-libdolfinx.sh  # [not win]
      script: test-libdolfinx.bat  # [win]
      source_files:
        - cpp/test
      files:
        - impi-toolchain.cmake  # [win]
      requires:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - impi-devel  # [win]
        - pkg-config
        - cmake
        - catch2 3.*
        - make  # [not win]
        - ninja  # [win]
        - fenics-ffcx {{ major_minor }}.*
  - name: fenics-dolfinx
    script: build-dolfinx.sh  # [not win]
    script: build-dolfinx.bat  # [win]

    requirements:
      build:
        - {{ compiler("c") }}
        - {{ stdlib("c") }}
        - {{ compiler("cxx") }}
        - cmake
        - ninja
        - pkg-config
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - nanobind                               # [build_platform != target_platform]
        - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]
      host:
        - {{ mpi | replace("impi", "impi-devel") }}
        # hdf5 shouldn't be needed here, but solver fails without it
        - hdf5 {{ hdf5 }} mpi_{{ mpi }}_*
        - {{ pin_subpackage("fenics-libdolfinx", exact=True) }}
        - python
        - pip
        - scikit-build-core
        - wheel
        - nanobind
        - fenics-basix {{ major_minor }}.*
        - fenics-basix-nanobind-abi
        - mpi4py
        - petsc * {{ scalar }}_*  # [not win]
        - petsc4py  # [not win]
        - slepc  # [not win]
        - slepc4py  # [not win]
      run:
        # code generation only needs c, not cxx
        - {{ compiler("c") }}
        - pkg-config
        - python
        - {{ pin_subpackage("fenics-libdolfinx", exact=True) }}
        - cffi
        - cffi <1.17  # [not (win or py>=313)]
        - mpi4py
        - numpy >=1.21
        - petsc4py  # [not win]
        - slepc4py  # [not win]
        - fenics-basix {{ major_minor }}.*
        - fenics-ffcx {{ major_minor }}.*
        - fenics-ufl {{ ufl_version }}.*
    test:
      script: test-dolfinx.sh  # [not win]
      script: test-dolfinx.bat  # [win]
      files:
        - test_dolfinx.py
      source_files:
        - python/demo
        - python/test
      requires:
        - pip
        - pytest >=6
        - python-gmsh
        # linux-aarch64 getting old gmsh with missing cairo
        # unclear what pin is holding it back
        - cairo  # [linux and aarch64]
        - sympy
        - scipy
        - matplotlib-base

about:
  home: https://fenicsproject.org
  summary: The computational environment of FEniCSx
  description: |
    DOLFINx is the computational environment of FEniCSx
    and implements the FEniCS Problem Solving Environment in Python and C++.
  license: LGPL-3.0-or-later
  license_family: LGPL
  license_file: COPYING.LESSER
  doc_url: https://docs.fenicsproject.org/dolfinx/v{{ version }}/
  dev_url: https://github.com/fenics/dolfinx

extra:
  feedstock-name: fenics-dolfinx
  recipe-maintainers:
    - minrk
